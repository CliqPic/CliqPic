<% invite_emails = @invitations.pluck(:email) %>
<div class='card'>
  <div class='row card-content'>
    <div class='card-title'><%= title %></div>
    <%= form_for(event, html: { class: 'col s12' }) do |f| %>
      <% if event.errors.any? %>
        <% event.errors.full_messages.each do |message| %>
          <%= render 'error_toast', message: message %>
        <% end %>
      <% end %>

      <div class="input-field col s12">
        <%= f.label :name, 'NAME' %>
        <%= f.text_field :name, maxlength: 255, 'data-length': 255, required: 'required' %>
      </div>

      <div class="input-field col s12">
        <%= label_tag 'event[date]', 'EVENT DATE' %>
        <%= date_field_tag 'event[date]', (@event.start_time and @event.start_time.strftime('%F')), class: 'datepicker' %>
      </div>

      <div class="input-field col s6">
        <%= label_tag 'event[start_time]', 'START TIME' %>
        <%= time_field_tag 'event[start_time]',(@event.start_time and @event.start_time.strftime('%H:%M')), class: 'timepicker' %>
      </div>

      <div class="input-field col s6">
        <%= label_tag 'event[end_time]', 'END TIME' %>
        <%= time_field_tag 'event[end_time]', (@event.end_time and @event.end_time.strftime('%H:%M')), class: 'timepicker' %>
      </div>

      <div class="input-field col s12">
        <%= f.label :location, 'LOCATION'%>
        <%= f.text_area :location, class: 'materialize-textarea' %>
      </div>

      <div class="input-field col s12">
        <%= f.label :hashtags, 'HASHTAGS' %>
        <div class='chips hashtags'>
        </div>
        <%= f.hidden_field :hashtags %>
      </div>

      <div class="input-field col s12">
        <%= label_tag 'event[invitees]', 'FRIENDS TO INVITE' %>
        <div class='chips invitees'>
        </div>
        <%= hidden_field_tag 'event[invitees]', invite_emails.join(',') %>
      </div>

      <div class="actions col s12">
        <%= f.submit class: 'btn blue darken-4' %>
        <a href='<%= @event.persisted? ? event_path(@event) : dashboard_path %>' class='btn grey'>Cancel</a>
      </div>
    <% end %>

    <script>
     $(function() {
       $('.datepicker').pickadate();
       $('.timepicker').pickatime();
       $('.chips.hashtags').on('chip.add', function(e, chip) {
        // Bugfix where second chip tag replaces placeholder in first
       setTimeout(function() { $(".chips.hashtags input").attr('placeholder', '+Hashtag') }, 10);

         var currentTags = $('#event_hashtags').val().split(','),
             newTag = (!chip ? $(".chips.hashtags input").val() : chip.tag).replace(/,/g, ''); // stip commas

         // Strip leading hashtags for storage
         if(newTag.startsWith('#')) {
           newTag = newTag.slice(1);
         } else {
           $(this).children('.chip:last').addClass('hashtag');
         }

         // handle no tags at all by properly initializing as an empty array
         if(!currentTags[0]) {
           currentTags = [];
         }

         currentTags.push(newTag)
         $('#event_hashtags').val(currentTags.join(','));
       }).on('chip.delete', function(e, chip) {
        // Bugfix where second chip tag replaces placeholder in first
        setTimeout(function() { $(".chips.hashtags input").attr('placeholder', '+Hashtag') }, 10);

         var currentTags = $('#event_hashtags').val().split(','),
             oldTag = chip.tag.replace('#', ''),
             tagIndex = currentTags.indexOf(oldTag);

         if(tagIndex > -1) {
           currentTags.splice(tagIndex, 1);
           $('#event_hashtags').val(currentTags.join(','));
         }
       }).material_chip({
         secondaryPlaceholder: '+Hashtag',
         data: [
           <% event.hashtags.to_s.split(',').each do |tag| %>
             { tag: "<%= tag %>" },
           <% end %>
         ],
         allowSpaces: false,
         allowCommas: false
       });
       <% unless event.hashtags.blank? %>
         // Ensure the "Hashtags" label doesn't show over the input when it has values
       $('.chips.hashtags').siblings('label').addClass('active');
       $('.hashtags .chip').addClass('hashtag');
       <% end %>

       $('.chips.invitees').on('chip.add', function(e, chip) {
         var currentInvitees = $('#event_invitees').val().split(','),
             newInvitee =  newTag = (!chip ? $(".chips.invitees input").val() : chip.tag);

         if(!currentInvitees[0]) {
           currentInvitees = []
         }

         currentInvitees.push(newInvitee);
         $('#event_invitees').val(currentInvitees.join(','));
       }).on('chip.delete', function(e, chip) {
         var currentInvitees = $('#event_invitees').val().split(','),
             oldInvitee = chip.tag,
             index = currentInvitees.indexOf(oldInvitee);

         if(index > -1) {
           currentInvitees.splice(index, 1);
           $('#event_invitees').val(currentInvitees.join(','));
         }
       }).material_chip({
         secondaryPlaceholder: '+Email',
         data: [
           <% invite_emails.each do |email| %>
           { tag: "<%= email %>" },
           <% end %>
         ],
         allowSpaces: false,
         allowCommas: false
       });
       <% unless invite_emails.empty? %>
       $('.chips.invitees').siblings('label').addClass('active');
       <% end %>

       Materialize.updateTextFields();
     });

    var fcn = function() {

      // Make sure that the hashtag and friends to invite labels dont
      // collapse on top of unfinished tags when you blur from the
      var blurFcn = function(e) {
        if($(this).val().length > 0) {
          e.preventDefault();
          $(this).parent().siblings('label').addClass('active')
        }

       }
       $('.chips.hashtags input').blur(blurFcn);
       $('.chips.invitees input').blur(blurFcn);


       // Make sure you grab any unfinished hashtag or email if they click
       // update event without hitting enter.
       $("input[type='submit']").click(function(e) {
        if($('.chips.hashtags input').val().length > 0) { 
         $('.chips.hashtags input').trigger("chip.add");
        }

        if($('.chips.invitees input').val().length > 0) { 
          console.log("truigger");
         $('.chips.invitees input').trigger("chip.add");
        }
       })
    };
    document.addEventListener("turbolinks:load", fcn);
    document.addEventListener("DOMContentLoaded", fcn);
    </script>
  </div>
</div>
